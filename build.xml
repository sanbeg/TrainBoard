<project xmlns:ivy="antlib:org.apache.ivy.ant">

  <property name="ivy.install.version" value="2.4.0" />
  <property name="ivy.jar.dir" value="lib" />
  <property name="ivy.jar.file" value="${ivy.jar.lib}/ivy.jar"/>

  <target name="clean">
    <delete verbose="true" dir="build" />
    <delete verbose="true">
      <fileset dir="test" includes="**/*.class"/>
    </delete>
  </target>

  <target name="compile">
    <mkdir dir="build" />
    <javac srcdir="main" destdir="build" listfiles="yes"
	   includeantruntime="false"/>
    <copy verbose="true" todir="build">
      <fileset dir="main" includes="*.css *.fxml" />
    </copy>
    <chmod dir="build" includes="*.css *.fxml" perm="400" />
  </target>

  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.lib}" />
    <get src="https://repo1.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
	 dest="${ivy.jar.file}" usetimestamp="true"/>
  </target>
  <target name="install-ivy" depends="download-ivy" description="--> install ivy">
    <path id="ivy.lib.path">
      <pathelement location="${ivy.jar.file}"/>
    </path>
    <taskdef resource="org/apache/ivy/ant/antlib.xml"
	     uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
  </target>

  <target name="resolve" description="retrieve dependencies with ivy" depends="install-ivy">
    <echo message="Getting dependencies..." />
    <ivy:retrieve />
    <ivy:cachepath pathid="compile.path" conf="compile" />
    <ivy:cachepath pathid="runtime.path" conf="runtime" />
    <ivy:cachepath pathid="test.path" conf="test" />
  </target>

  <target name="test-compile" depends="compile, resolve">
    <javac srcdir="test" includeantruntime="false">
      <classpath>
	<path location="main" />
      </classpath>
      <classpath refid="test.path" />

    </javac>
  </target>

  <target name="test" depends="test-compile">
    <junit printsummary="yes" filtertrace="true" haltonfailure="true">
      <classpath>
	<path location="main" />
	<path location="test" />
      </classpath>
      <classpath refid="test.path" />
      <batchtest fork="yes">
	<fileset dir="test" includes="*Test.java"/>
      </batchtest>
      <formatter type="plain" usefile="false" />
    </junit>
  </target>

  <target name="package" depends="compile">
    <exec executable="${java.home}/../bin/javapackager">
      <arg value="-createjar" />
      <arg value="-srcdir" />   <arg value="build" />
      <arg value="-appclass" /> <arg value="Mover" />
      <arg value="-outfile" />  <arg value="TrainBoard" />
    </exec>
  </target>

</project>
